{"version":3,"sources":["script.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","formName","document","getElementById","formDescription","formImage","formType","formGenre","formIdeal","formPlayersIdeal","formPlayersMinimum","formPlayersMax","formAge","formDifficulty","formSetupTime","formPlayTime","formPublishDate","formPublisher","formExpansion","formLocation","addEventListener","evt","preventDefault","data","name","value","description","image","type","genre","idealFor","playersIdeal","playersMin","playersMax","age","difficulty","setupTime","playTime","yearPublished","publisher","expansion","location","firebaseKey","firebase","database","ref","child","push","key","updates","update"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAyBA,IAAIK,EAAWC,SAASC,eAAe,YACnCC,EAAkBF,SAASC,eAAe,mBAC1CE,EAAYH,SAASC,eAAe,aACpCG,EAAWJ,SAASC,eAAe,YACnCI,EAAYL,SAASC,eAAe,aACpCK,EAAYN,SAASC,eAAe,aACpCM,EAAmBP,SAASC,eAAe,oBAC3CO,EAAqBR,SAASC,eAAe,sBAC7CQ,EAAiBT,SAASC,eAAe,kBACzCS,EAAUV,SAASC,eAAe,WAClCU,EAAiBX,SAASC,eAAe,kBACzCW,EAAgBZ,SAASC,eAAe,iBACxCY,EAAeb,SAASC,eAAe,gBACvCa,EAAkBd,SAASC,eAAe,mBAC1Cc,EAAgBf,SAASC,eAAe,iBACxCe,EAAgBhB,SAASC,eAAe,iBACxCgB,EAAejB,SAASC,eAAe,gBAC1BD,SAASC,eAAe,cAC9BiB,iBAAiB,QAI5B,SAAiBC,GACbA,EAAIC,eACJ,IAAIC,EAAO,CAEPC,KAAMvB,EAASwB,MACfC,YAAatB,EAAgBqB,MAC7BE,MAAOtB,EAAUoB,MACjBG,KAAMtB,EAASmB,MACfI,MAAOtB,EAAUkB,MACjBK,SAAUtB,EAAUiB,MACpBM,aAActB,EAAiBgB,MAC/BO,WAAYtB,EAAmBe,MAC/BQ,WAAYtB,EAAec,MAC3BS,IAAKtB,EAAQa,MACbU,WAAYtB,EAAeY,MAC3BW,UAAWtB,EAAcW,MACzBY,SAAUtB,EAAaU,MACvBa,cAAetB,EAAgBS,MAC/Bc,UAAWtB,EAAcQ,MACzBe,UAAWtB,EAAcO,MACzBgB,SAAUtB,EAAaM,OAIvBiB,EAAcC,SAASC,WAAWC,MAAMC,MAAM,uBAAuBC,OAAOC,IAE5EC,EAAU,GAGd,OAFAA,EAAQ,IAAMP,GAAenB,EAEtBoB,SAASC,WAAWC,MAAMK,OAAOD,KA/B7BN,SAASC,YAoJtB,KAAK,GAAG,CAAC","file":"script.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\n/*****************************************************************************/\n/*                            VARIABLES                                      */\n/*****************************************************************************/\n\n// let app = document.getElementById(\"app\");\n// let gamesList = document.getElementById(\"gamesList\");\n// let genresList = document.getElementById(\"genresList\");\n// let idealList = document.getElementById(\"idealList\");\n// let playerList = document.getElementById(\"playerList\");\n// let mechanicsList = document.getElementById(\"mechanicsList\");\n\n\n// let games = [];\n// let genres = [];\n// let ideal = [];\n// let players = [];\n// let mechanics = [];\n// let difficulty = [];\n// let gameArr = [];\n// let endpoint = \"https://www.darrencarlin.com/games.json\";\n\n// Form Inputs \n\nvar formName = document.getElementById(\"formName\");\nvar formDescription = document.getElementById(\"formDescription\");\nvar formImage = document.getElementById(\"formImage\");\nvar formType = document.getElementById(\"formType\");\nvar formGenre = document.getElementById(\"formGenre\");\nvar formIdeal = document.getElementById(\"formIdeal\");\nvar formPlayersIdeal = document.getElementById(\"formPlayersIdeal\");\nvar formPlayersMinimum = document.getElementById(\"formPlayersMinimum\");\nvar formPlayersMax = document.getElementById(\"formPlayersMax\");\nvar formAge = document.getElementById(\"formAge\");\nvar formDifficulty = document.getElementById(\"formDifficulty\");\nvar formSetupTime = document.getElementById(\"formSetupTime\");\nvar formPlayTime = document.getElementById(\"formPlayTime\");\nvar formPublishDate = document.getElementById(\"formPublishDate\");\nvar formPublisher = document.getElementById(\"formPublisher\");\nvar formExpansion = document.getElementById(\"formExpansion\");\nvar formLocation = document.getElementById(\"formLocation\");\nvar submitForm = document.getElementById(\"formSubmit\");\nsubmitForm.addEventListener(\"click\", addGame);\n\nvar database = firebase.database();\n\nfunction addGame(evt) {\n    evt.preventDefault;\n    var data = {\n\n        name: formName.value,\n        description: formDescription.value,\n        image: formImage.value,\n        type: formType.value,\n        genre: formGenre.value,\n        idealFor: formIdeal.value,\n        playersIdeal: formPlayersIdeal.value,\n        playersMin: formPlayersMinimum.value,\n        playersMax: formPlayersMax.value,\n        age: formAge.value,\n        difficulty: formDifficulty.value,\n        setupTime: formSetupTime.value,\n        playTime: formPlayTime.value,\n        yearPublished: formPublishDate.value,\n        publisher: formPublisher.value,\n        expansion: formExpansion.value,\n        location: formLocation.value\n\n    };\n\n    var firebaseKey = firebase.database().ref().child(\"board-game-tabletop\").push().key;\n\n    var updates = {};\n    updates['/' + firebaseKey] = data;\n\n    return firebase.database().ref().update(updates);\n}\n\n/*****************************************************************************/\n/*                            FUNCTIONS                                      */\n/*****************************************************************************/\n\n// // Flatten / De-duplicate Arrays.\n\n// let flattenSort = (arr) => {\n//     return [...new Set(arr.reduce((a, b) => a.concat(b), []))];\n// }\n\n\n// // Find max player Count off all games.\n\n// let findMax = (arr) => {\n//     return [Math.max(...arr)];\n// }\n\n// // Remove empty strings from Array \n\n// let removeEmpty = (arr) => {\n//     arr.filter(str => str.trim() != '');\n// };\n\n\n// // Create and populate options for select menus.\n// // *numberedList is used for player 2 - 'max player' \n\n// let populateOption = (jsArr, htmlEl, numberedList = false) => {\n\n//     if (numberedList) {\n//         for (let i = 2; i <= jsArr; i++) {\n//             htmlEl.innerHTML += `<option value=\"${i}\"> ${i} </option>`;\n//         }\n//     } else {\n//         for (let i of jsArr) {\n//             htmlEl.innerHTML += `<option value=\"${i}\"> ${i} </option>`;\n//         }\n//     }\n// }\n\n// const gamez = [];\n\n// fetch(endpoint)\n//     .then(blob => blob.json())\n//     .then(data => gamez.push(...data));\n\n// gamez.forEach((game) => {\n//     games.push(game.name);\n// })\n\n// function findMatches(wordToMatch, gamez) {\n//     return gamez.filter(item => {\n//         const regex = new RegExp(wordToMatch, 'gi');\n//         return item.name.match(regex)\n//     })\n// }\n\n// function displayMatches() {\n//     const matchArray = findMatches(this.value, gamez)\n//     const html = matchArray.map(item => {\n//         return `\n//         <li>\n//             ${item.name}\n//         </li>\n//         `;\n//     }).join('');\n//     suggestions.innerHTML = html;\n// }\n\n// const searchInput = document.querySelector('.search-bar');\n// const suggestions = document.querySelector('.suggestions');\n\n// searchInput.addEventListener('change', displayMatches);\n// searchInput.addEventListener('keyup', displayMatches);\n\n// // AJAX Call \n// let gamez = [];\n// fetch(endpoint)\n//     .then(response => response.json())\n//     //  .then(jsonData => gamez.push(...jsonData))\n//     .then(data => data.forEach((game, index) => {\n\n//         gameArr.push(game); // Storing entire JSON data.\n\n//         games.push(game.name); // Storing Names\n\n//         genres.push(game.genre); // Storing Genres\n//         genres = (flattenSort(genres));\n\n//         ideal.push(game.idealFor); // Storing Ideal For\n//         ideal = flattenSort(ideal);\n\n//         players.push(game.players.playersMax); // Storing Max Players\n//         players = findMax(players);\n\n//         mechanics.push(game.mechanics); // Storing Mechanics\n//         mechanics = flattenSort(mechanics);\n\n//         difficulty.push(game.difficulty); // Storing Difficulty \n//         difficulty = flattenSort(difficulty);\n\n//         populateOption(games, gamesList);\n//         populateOption(genres, genresList);\n//         populateOption(ideal, idealList);\n//         populateOption(mechanics, mechanicsList);\n//         populateOption(difficulty, difficultyList);\n//         populateOption(players, playerList, true);\n\n\n//     }))\n//     .catch(function (error) {\n//         console.log(error);\n//     });\n\n},{}]},{},[1]);\n"]}