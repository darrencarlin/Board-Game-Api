{"version":3,"sources":["script.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","document","addEventListener","database","firebase","tableContainer","getElementById","style","display","table","form","viewGames","displayGames","addGames","formName","formDescription","formImage","formType","formGenre","formIdeal","formPlayersIdeal","formPlayersMinimum","formPlayersMax","formAge","formDifficulty","formSetupTime","formPlayTime","formPublishDate","formPublisher","formExpansion","formLocation","submitForm","data","updates","str","id","ref","child","push","key","name","value","description","image","toLowerCase","type","split","genre","idealFor","playersIdeal","parseInt","playersMin","playersMax","age","difficulty","setupTime","playTime","yearPublished","publisher","rank","rating","expansion","location","innerHTML","setTimeout","reset","update","on","snapshot","forEach","game","val","evt","target","className","deleteGame","parentNode","element","console","log","confirm","remove"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAKAK,SAASC,iBAAiB,mBAAoB,WAqB1C,IAAIC,EAAWC,SAASD,WAEpBE,EAAiBJ,SAASK,eAAe,aAC7CD,EAAeE,MAAMC,QAAU,OAC/B,IAAIC,EAAQR,SAASK,eAAe,kBAUhCI,GATeT,SAASK,eAAe,gBAAgBJ,iBAAiB,QAAS,WACjFS,IACAC,MAEcX,SAASK,eAAe,eAAeJ,iBAAiB,QAAS,WAC/EW,MAIOZ,SAASK,eAAe,iBAC/BQ,EAAWb,SAASK,eAAe,YACnCS,EAAkBd,SAASK,eAAe,mBAC1CU,EAAYf,SAASK,eAAe,aACpCW,EAAWhB,SAASK,eAAe,YACnCY,EAAYjB,SAASK,eAAe,aACpCa,EAAYlB,SAASK,eAAe,aACpCc,EAAmBnB,SAASK,eAAe,oBAC3Ce,EAAqBpB,SAASK,eAAe,sBAC7CgB,EAAiBrB,SAASK,eAAe,kBACzCiB,EAAUtB,SAASK,eAAe,WAClCkB,EAAiBvB,SAASK,eAAe,kBACzCmB,EAAgBxB,SAASK,eAAe,iBACxCoB,EAAezB,SAASK,eAAe,gBACvCqB,EAAkB1B,SAASK,eAAe,mBAC1CsB,EAAgB3B,SAASK,eAAe,iBACxCuB,EAAgB5B,SAASK,eAAe,iBACxCwB,EAAe7B,SAASK,eAAe,gBACvCyB,EAAa9B,SAASK,eAAe,cAEzCyB,EAAW7B,iBAAiB,QAAS,WA8CrC,IAIQ8B,EAuBAC,EAgBcC,EAvCdF,EAAO,CACPG,GAHc/B,SAASD,WAAWiC,MAAMC,MAAM,uBAAuBC,OAAOC,IAI5EC,KAAM1B,EAAS2B,MACfC,YAAa3B,EAAgB0B,MAC7BE,OAAQ3B,EAAUyB,MAAQ,QAAQG,cAClCC,KAAM5B,EAASwB,MAAMK,MAAM,MAC3BC,MAAO7B,EAAUuB,MAAMK,MAAM,MAC7BE,SAAU7B,EAAUsB,MAAMK,MAAM,MAChCG,aAAcC,SAAS9B,EAAiBqB,OACxCU,WAAYD,SAAS7B,EAAmBoB,OACxCW,WAAYF,SAAS5B,EAAemB,OACpCY,IAAKH,SAAS3B,EAAQkB,OACtBa,WAAY9B,EAAeiB,MAC3Bc,UAAWL,SAASzB,EAAcgB,OAClCe,SAAUN,SAASxB,EAAae,OAChCgB,cAAe9B,EAAgBc,MAC/BiB,UAAW9B,EAAca,MAAMK,MAAM,MACrCa,KAAM,EACNC,OAAQ,EACRC,WAoBc3B,EApBUL,EAAcY,MAqB3B,SAARP,GAA0B,SAARA,GApBrB4B,SAAUhC,EAAaW,QAGvBR,EAAU,IACN,IAAMnB,EAAS2B,OAAST,EAChCD,EAAWgC,UAAY,cACvBC,WAAW,WACPjC,EAAWgC,UAAY,YACxB,KACHrD,EAAKuD,QACE7D,SAASD,WAAWiC,MAAM8B,OAAOjC,KA5E5C,IAEIrB,EAAe,WAEJR,SAASD,WAAWiC,MAC1B+B,GAAG,QAAS,SAAUC,GACvB3D,EAAMsD,UAAY,mIAClBK,EAASC,QAAQ,SAAUC,GACvB7D,EAAMsD,WAAa,WAAcO,EAAKC,MAAM/B,KAAO,+CAAkD8B,EAAKC,MAAM/B,KAAO,kDAAoD8B,EAAKC,MAAMpC,GAAK,yOAKnMtB,EAAW,WACXR,EAAeE,MAAMC,QAAU,OAC/BE,EAAKH,MAAMC,QAAU,QAGrBG,EAAY,WACZD,EAAKH,MAAMC,QAAU,OACrBH,EAAeE,MAAMC,QAAU,SAGnCP,SAASC,iBAAiB,QAAS,SAAUsE,GAEb,oBAAxBA,EAAIC,OAAOC,WACXC,EAAWH,EAAIC,OAAOG,WAAWA,WAAWzC,MAIpD,IAAIwC,EAAa,SAAoBE,GACjCC,QAAQC,IAAIF,GACZ,IAAIP,EAAOnE,EAASiC,MAAMC,MAAMwC,GAErB,GADDG,QAAQ,uBAEdV,EAAKW,SACLH,QAAQC,IAAI,YAEZD,QAAQC,IAAI,iBAkKtB,KAAK,GAAG,CAAC","file":"script.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\n/*****************************************************************************/\n/*                            VARIABLES                                      */\n/*****************************************************************************/\ndocument.addEventListener('DOMContentLoaded', function () {\n    // let app = document.getElementById(\"app\");\n    // let gamesList = document.getElementById(\"gamesList\");\n    // let genresList = document.getElementById(\"genresList\");\n    // let idealList = document.getElementById(\"idealList\");\n    // let playerList = document.getElementById(\"playerList\");\n    // let mechanicsList = document.getElementById(\"mechanicsList\");\n\n\n    // let games = [];\n    // let genres = [];\n    // let ideal = [];\n    // let players = [];\n    // let mechanics = [];\n    // let difficulty = [];\n    // let gameArr = [];\n    // let endpoint = \"https://www.darrencarlin.com/games.json\";\n\n    // Elements \n    // Initialize Firebase\n\n    var database = firebase.database();\n\n    var tableContainer = document.getElementById(\"viewGames\");\n    tableContainer.style.display = \"none\";\n    var table = document.getElementById(\"viewGamesTable\");\n    var viewGamesBtn = document.getElementById(\"viewGamesBtn\").addEventListener(\"click\", function () {\n        viewGames();\n        displayGames();\n    });\n    var addGamesBtn = document.getElementById(\"addGamesBtn\").addEventListener(\"click\", function () {\n        addGames();\n    });\n\n    // Form Inputs \n    var form = document.getElementById(\"formAddGames\");\n    var formName = document.getElementById(\"formName\");\n    var formDescription = document.getElementById(\"formDescription\");\n    var formImage = document.getElementById(\"formImage\");\n    var formType = document.getElementById(\"formType\");\n    var formGenre = document.getElementById(\"formGenre\");\n    var formIdeal = document.getElementById(\"formIdeal\");\n    var formPlayersIdeal = document.getElementById(\"formPlayersIdeal\");\n    var formPlayersMinimum = document.getElementById(\"formPlayersMinimum\");\n    var formPlayersMax = document.getElementById(\"formPlayersMax\");\n    var formAge = document.getElementById(\"formAge\");\n    var formDifficulty = document.getElementById(\"formDifficulty\");\n    var formSetupTime = document.getElementById(\"formSetupTime\");\n    var formPlayTime = document.getElementById(\"formPlayTime\");\n    var formPublishDate = document.getElementById(\"formPublishDate\");\n    var formPublisher = document.getElementById(\"formPublisher\");\n    var formExpansion = document.getElementById(\"formExpansion\");\n    var formLocation = document.getElementById(\"formLocation\");\n    var submitForm = document.getElementById(\"formSubmit\");\n\n    submitForm.addEventListener(\"click\", function () {\n        addGame();\n    });\n\n    var games = [];\n\n    var displayGames = function displayGames() {\n\n        var data = firebase.database().ref();\n        data.on(\"value\", function (snapshot) {\n            table.innerHTML = \"<tr>\\n            <th>Name</th>\\n            <th>ID</th>\\n            <th>Edit</th>\\n            <th>Delete</th>\\n         </tr>\";\n            snapshot.forEach(function (game) {\n                table.innerHTML += \"<tr id=\\\"\" + game.val().name + \"\\\">\\n                                    <td>\" + game.val().name + \"</td>\\n                                    <td>\" + game.val().id + \"</td>\\n                                    <td class=\\\"edit\\\"><i class=\\\"far fa-edit\\\"></i></td>\\n                                    <td class=\\\"delete\\\"><i class=\\\"far fa-trash-alt\\\"></i></td>\\n                                </tr>\";\n            });\n        });\n    };\n\n    var addGames = function addGames() {\n        tableContainer.style.display = \"none\";\n        form.style.display = \"grid\";\n    };\n\n    var viewGames = function viewGames() {\n        form.style.display = \"none\";\n        tableContainer.style.display = \"block\";\n    };\n\n    document.addEventListener('click', function (evt) {\n\n        if (evt.target.className == 'far fa-trash-alt') {\n            deleteGame(evt.target.parentNode.parentNode.id);\n        }\n    });\n\n    var deleteGame = function deleteGame(element) {\n        console.log(element);\n        var game = database.ref().child(element);\n        var del = confirm(\"Press OK to delete\");\n        if (del == true) {\n            game.remove();\n            console.log(\"deleted\");\n        } else {\n            console.log(\"cancelled\");\n        }\n    };\n\n    function addGame() {\n\n        var firebaseKey = firebase.database().ref().child(\"board-game-tabletop\").push().key;\n\n        var data = {\n            id: firebaseKey,\n            name: formName.value,\n            description: formDescription.value,\n            image: (formImage.value + \".png\").toLowerCase(),\n            type: formType.value.split(\", \"),\n            genre: formGenre.value.split(\", \"),\n            idealFor: formIdeal.value.split(\", \"),\n            playersIdeal: parseInt(formPlayersIdeal.value),\n            playersMin: parseInt(formPlayersMinimum.value),\n            playersMax: parseInt(formPlayersMax.value),\n            age: parseInt(formAge.value),\n            difficulty: formDifficulty.value,\n            setupTime: parseInt(formSetupTime.value),\n            playTime: parseInt(formPlayTime.value),\n            yearPublished: formPublishDate.value,\n            publisher: formPublisher.value.split(\", \"),\n            rank: 0,\n            rating: 0,\n            expansion: stringToBool(formExpansion.value),\n            location: formLocation.value\n\n        };\n        var updates = {};\n        updates['/' + formName.value] = data;\n        submitForm.innerHTML = \"Game Added!\";\n        setTimeout(function () {\n            submitForm.innerHTML = \"Add Game\";\n        }, 3000);\n        form.reset();\n        return firebase.database().ref().update(updates);\n    }\n\n    /*****************************************************************************/\n    /*                            FUNCTIONS                                      */\n    /*****************************************************************************/\n\n    // Convert string to boolean\n\n    function stringToBool(str) {\n        return str === \"True\" || str === \"true\" ? true : false;\n    }\n\n    // // Flatten / De-duplicate Arrays.\n\n    // let flattenSort = (arr) => {\n    //     return [...new Set(arr.reduce((a, b) => a.concat(b), []))];\n    // }\n\n\n    // // Find max player Count off all games.\n\n    // let findMax = (arr) => {\n    //     return [Math.max(...arr)];\n    // }\n\n    // // Remove empty strings from Array \n\n    // let removeEmpty = (arr) => {\n    //     arr.filter(str => str.trim() != '');\n    // };\n\n\n    // // Create and populate options for select menus.\n    // // *numberedList is used for player 2 - 'max player' \n\n    // let populateOption = (jsArr, htmlEl, numberedList = false) => {\n\n    //     if (numberedList) {\n    //         for (let i = 2; i <= jsArr; i++) {\n    //             htmlEl.innerHTML += `<option value=\"${i}\"> ${i} </option>`;\n    //         }\n    //     } else {\n    //         for (let i of jsArr) {\n    //             htmlEl.innerHTML += `<option value=\"${i}\"> ${i} </option>`;\n    //         }\n    //     }\n    // }\n\n    // const gamez = [];\n\n    // fetch(endpoint)\n    //     .then(blob => blob.json())\n    //     .then(data => gamez.push(...data));\n\n    // gamez.forEach((game) => {\n    //     games.push(game.name);\n    // })\n\n    // function findMatches(wordToMatch, gamez) {\n    //     return gamez.filter(item => {\n    //         const regex = new RegExp(wordToMatch, 'gi');\n    //         return item.name.match(regex)\n    //     })\n    // }\n\n    // function displayMatches() {\n    //     const matchArray = findMatches(this.value, gamez)\n    //     const html = matchArray.map(item => {\n    //         return `\n    //         <li>\n    //             ${item.name}\n    //         </li>\n    //         `;\n    //     }).join('');\n    //     suggestions.innerHTML = html;\n    // }\n\n    // const searchInput = document.querySelector('.search-bar');\n    // const suggestions = document.querySelector('.suggestions');\n\n    // searchInput.addEventListener('change', displayMatches);\n    // searchInput.addEventListener('keyup', displayMatches);\n\n    // // AJAX Call \n    // let gamez = [];\n    // fetch(endpoint)\n    //     .then(response => response.json())\n    //     //  .then(jsonData => gamez.push(...jsonData))\n    //     .then(data => data.forEach((game, index) => {\n\n    //         gameArr.push(game); // Storing entire JSON data.\n\n    //         games.push(game.name); // Storing Names\n\n    //         genres.push(game.genre); // Storing Genres\n    //         genres = (flattenSort(genres));\n\n    //         ideal.push(game.idealFor); // Storing Ideal For\n    //         ideal = flattenSort(ideal);\n\n    //         players.push(game.players.playersMax); // Storing Max Players\n    //         players = findMax(players);\n\n    //         mechanics.push(game.mechanics); // Storing Mechanics\n    //         mechanics = flattenSort(mechanics);\n\n    //         difficulty.push(game.difficulty); // Storing Difficulty \n    //         difficulty = flattenSort(difficulty);\n\n    //         populateOption(games, gamesList);\n    //         populateOption(genres, genresList);\n    //         populateOption(ideal, idealList);\n    //         populateOption(mechanics, mechanicsList);\n    //         populateOption(difficulty, difficultyList);\n    //         populateOption(players, playerList, true);\n\n\n    //     }))\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n});\n\n},{}]},{},[1]);\n"]}