{"version":3,"sources":["script.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","tableContainer","document","getElementById","style","display","table","form","addEventListener","formName","formDescription","formImage","formType","formGenre","formIdeal","formPlayersIdeal","formPlayersMinimum","formPlayersMax","formAge","formDifficulty","formSetupTime","formPlayTime","formPublishDate","formPublisher","formExpansion","formLocation","submitForm","evt","preventDefault","data","id","firebase","database","ref","child","push","key","name","value","description","image","toLowerCase","type","split","genre","idealFor","playersIdeal","parseInt","playersMin","playersMax","age","difficulty","setupTime","playTime","yearPublished","publisher","rank","rating","expansion","str","location","updates","innerHTML","setTimeout","update","on","snapshot","forEach","game","val"],"mappings":"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","file":"script.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\n/*****************************************************************************/\n/*                            VARIABLES                                      */\n/*****************************************************************************/\n\n// let app = document.getElementById(\"app\");\n// let gamesList = document.getElementById(\"gamesList\");\n// let genresList = document.getElementById(\"genresList\");\n// let idealList = document.getElementById(\"idealList\");\n// let playerList = document.getElementById(\"playerList\");\n// let mechanicsList = document.getElementById(\"mechanicsList\");\n\n\n// let games = [];\n// let genres = [];\n// let ideal = [];\n// let players = [];\n// let mechanics = [];\n// let difficulty = [];\n// let gameArr = [];\n// let endpoint = \"https://www.darrencarlin.com/games.json\";\n\n// Elements \n\nvar tableContainer = document.getElementById(\"viewGames\");\ntableContainer.style.display = \"none\";\nvar table = document.getElementById(\"viewGamesTable\");\nvar viewGamesBtn = document.getElementById(\"viewGamesBtn\").addEventListener(\"click\", viewGames);\nvar addGamesBtn = document.getElementById(\"addGamesBtn\").addEventListener(\"click\", addGames);\n\n// Form Inputs \nvar form = document.getElementById(\"formAddGames\");\nvar formName = document.getElementById(\"formName\");\nvar formDescription = document.getElementById(\"formDescription\");\nvar formImage = document.getElementById(\"formImage\");\nvar formType = document.getElementById(\"formType\");\nvar formGenre = document.getElementById(\"formGenre\");\nvar formIdeal = document.getElementById(\"formIdeal\");\nvar formPlayersIdeal = document.getElementById(\"formPlayersIdeal\");\nvar formPlayersMinimum = document.getElementById(\"formPlayersMinimum\");\nvar formPlayersMax = document.getElementById(\"formPlayersMax\");\nvar formAge = document.getElementById(\"formAge\");\nvar formDifficulty = document.getElementById(\"formDifficulty\");\nvar formSetupTime = document.getElementById(\"formSetupTime\");\nvar formPlayTime = document.getElementById(\"formPlayTime\");\nvar formPublishDate = document.getElementById(\"formPublishDate\");\nvar formPublisher = document.getElementById(\"formPublisher\");\nvar formExpansion = document.getElementById(\"formExpansion\");\nvar formLocation = document.getElementById(\"formLocation\");\nvar submitForm = document.getElementById(\"formSubmit\");\n\nsubmitForm.addEventListener(\"click\", addGame);\n\nvar database = firebase.database();\nvar games = [];\n\nfunction displayGames() {\n    var data = firebase.database().ref();\n    data.on(\"value\", function (snapshot) {\n        snapshot.forEach(function (game) {\n            table.innerHTML += \"<tr><td>\" + game.val().name + \"</td> <td>\" + game.val().id + \"</td><td class=\\\"edit\\\"> <i class=\\\"far fa-edit\\\"></i></td><td class=\\\"delete\\\"> <i class=\\\"far fa-trash-alt\\\"></i></td></tr>\";\n        });\n    });\n}\n\nfunction addGames() {\n    tableContainer.style.display = \"none\";\n    form.style.display = \"grid\";\n}\n\nfunction viewGames() {\n    form.style.display = \"none\";\n    tableContainer.style.display = \"block\";\n}\ndisplayGames();\n\nfunction addGame(evt) {\n\n    evt.preventDefault;\n    var firebaseKey = firebase.database().ref().child(\"board-game-tabletop\").push().key;\n\n    var data = {\n        id: firebaseKey,\n        name: formName.value,\n        description: formDescription.value,\n        image: (formImage.value + \".png\").toLowerCase(),\n        type: formType.value.split(\", \"),\n        genre: formGenre.value.split(\", \"),\n        idealFor: formIdeal.value.split(\", \"),\n        playersIdeal: parseInt(formPlayersIdeal.value),\n        playersMin: parseInt(formPlayersMinimum.value),\n        playersMax: parseInt(formPlayersMax.value),\n        age: parseInt(formAge.value),\n        difficulty: formDifficulty.value,\n        setupTime: parseInt(formSetupTime.value),\n        playTime: parseInt(formPlayTime.value),\n        yearPublished: formPublishDate.value,\n        publisher: formPublisher.value.split(\", \"),\n        rank: 0,\n        rating: 0,\n        expansion: stringToBool(formExpansion.value),\n        location: formLocation.value\n\n    };\n    var updates = {};\n    updates['/' + formName.value] = data;\n    submitForm.innerHTML = \"Game Added!\";\n    setTimeout(function () {\n        submitForm.innerHTML = \"Add Game\";\n    }, 3000);\n    return firebase.database().ref().update(updates);\n}\n\n/*****************************************************************************/\n/*                            FUNCTIONS                                      */\n/*****************************************************************************/\n\n// Convert string to boolean\n\nfunction stringToBool(str) {\n    return str === \"True\" || str === \"true\" ? true : false;\n}\n\n// // Flatten / De-duplicate Arrays.\n\n// let flattenSort = (arr) => {\n//     return [...new Set(arr.reduce((a, b) => a.concat(b), []))];\n// }\n\n\n// // Find max player Count off all games.\n\n// let findMax = (arr) => {\n//     return [Math.max(...arr)];\n// }\n\n// // Remove empty strings from Array \n\n// let removeEmpty = (arr) => {\n//     arr.filter(str => str.trim() != '');\n// };\n\n\n// // Create and populate options for select menus.\n// // *numberedList is used for player 2 - 'max player' \n\n// let populateOption = (jsArr, htmlEl, numberedList = false) => {\n\n//     if (numberedList) {\n//         for (let i = 2; i <= jsArr; i++) {\n//             htmlEl.innerHTML += `<option value=\"${i}\"> ${i} </option>`;\n//         }\n//     } else {\n//         for (let i of jsArr) {\n//             htmlEl.innerHTML += `<option value=\"${i}\"> ${i} </option>`;\n//         }\n//     }\n// }\n\n// const gamez = [];\n\n// fetch(endpoint)\n//     .then(blob => blob.json())\n//     .then(data => gamez.push(...data));\n\n// gamez.forEach((game) => {\n//     games.push(game.name);\n// })\n\n// function findMatches(wordToMatch, gamez) {\n//     return gamez.filter(item => {\n//         const regex = new RegExp(wordToMatch, 'gi');\n//         return item.name.match(regex)\n//     })\n// }\n\n// function displayMatches() {\n//     const matchArray = findMatches(this.value, gamez)\n//     const html = matchArray.map(item => {\n//         return `\n//         <li>\n//             ${item.name}\n//         </li>\n//         `;\n//     }).join('');\n//     suggestions.innerHTML = html;\n// }\n\n// const searchInput = document.querySelector('.search-bar');\n// const suggestions = document.querySelector('.suggestions');\n\n// searchInput.addEventListener('change', displayMatches);\n// searchInput.addEventListener('keyup', displayMatches);\n\n// // AJAX Call \n// let gamez = [];\n// fetch(endpoint)\n//     .then(response => response.json())\n//     //  .then(jsonData => gamez.push(...jsonData))\n//     .then(data => data.forEach((game, index) => {\n\n//         gameArr.push(game); // Storing entire JSON data.\n\n//         games.push(game.name); // Storing Names\n\n//         genres.push(game.genre); // Storing Genres\n//         genres = (flattenSort(genres));\n\n//         ideal.push(game.idealFor); // Storing Ideal For\n//         ideal = flattenSort(ideal);\n\n//         players.push(game.players.playersMax); // Storing Max Players\n//         players = findMax(players);\n\n//         mechanics.push(game.mechanics); // Storing Mechanics\n//         mechanics = flattenSort(mechanics);\n\n//         difficulty.push(game.difficulty); // Storing Difficulty \n//         difficulty = flattenSort(difficulty);\n\n//         populateOption(games, gamesList);\n//         populateOption(genres, genresList);\n//         populateOption(ideal, idealList);\n//         populateOption(mechanics, mechanicsList);\n//         populateOption(difficulty, difficultyList);\n//         populateOption(players, playerList, true);\n\n\n//     }))\n//     .catch(function (error) {\n//         console.log(error);\n//     });\n\n},{}]},{},[1]);\n"]}